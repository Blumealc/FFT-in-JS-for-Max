hann(x, dim) {
	rmp = pow(sin(fract(x) * PI), 2);
	return rmp;
}
readbf(x, bff, wndw, rl, rr, chns, st, end) {
	left = wave(bff, x, st, end, chns*0, interp="cubic", boundmode="ignore")*wndw*rl;
	right = wave(bff, x, st, end, chns, interp="cubic", boundmode="ignore")*wndw*rr;
	return left, right;
}
tosamps(arg,sr) {
	return arg/1000*sr;
}
Data smp1(44100*30);
Data env(2048);
History start(0);

History nota1(1);
History dyn1(1);

History offset(0);
//History flag(0);

History L1(100);

History effend1(0);
History effst1(0);
History effdur1(0);

History smallest(pow(2,-32));
History randR1(1);
History randL1(1);

History unique1(0);

History lenght1(0);

History sx1(2);

History acstop(0);

Param midinote(60, min=1, max=127);
Param vel(127, min=0, max=127);

Param smpstart1(0, min=0);
Param smpend1(4410, min=0);
Param srsample1(44100);

Param x1(2, min=0, max=8);
Param stops(0, min=0, max=1);

val = 0.5;

aL, aR = 0;
if (start == 0) {
	smallest = pow(2,-32);
		
	lenght1 = srsample1;

	unique1 = scale(noise(123+mc_channel), -1, 1, 0, 999);
	
	effst1 = 0;
	effend1 = dim(smp1);
	effdur1 = clip(effend1-effst1, smallest, dim(smp1));
	
	L1 = 100;
	
	start = 1;
}

phsr1 = (phasor(L1));

window1 = wave(env, phsr1, 0, 2048, 0, interp="cubic", boundmode="ignore")*acstop;

canali1 = channels(smp1)-1;

aL, aR = readbf(phsr1, smp1, window1, randL1, randR1, canali1, effst1, effend1); 

out1, out2 = readbf(phsr1, smp1, window1, randL1, randR1, canali1, effst1, effend1); 

out3 = window1;
out4 = offset;
if (delta(phsr1) < 0) {
	effst1 = clip(smpstart1, 0, dim(smp1)-1);
	effend1 = clip(smpend1, 1, dim(smp1));
	effdur1 = clip(effend1-effst1, smallest, dim(smp1));
	nota1 = pow(2, (midinote-60)/12);
	dyn1 = vel/127;
	L1 = clip(1/(effdur1/lenght1)*nota1, smallest, 10000);
	offset = (1/8)*mc_channel*effdur1;
	acstop = stops;
}


if (delta(phsr1) < 0 && effdur1 > mstosamps(1000/20)) {
	val = clip(noise(unique1)*0.5+0.5, 0, 1);
	randL1 = (sqrt(1-val));
	randR1 = (sqrt(val));
}